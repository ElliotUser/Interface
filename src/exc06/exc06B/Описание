    В приведенном примере программы создается класс, в котором используются
обе реализации данного интерфейса в классах FixedStack и DynStack. Для этого
применяется ссылка на интерфейс. Это означает, что поиск вариантов при вызове
методов push() и рор() осуществляется во время выполнения, а не во время ком-
пиляции.
     В этой программе переменная mystack содержит ссылку на интерфейс IntStack.
Следовательно, когда она ссылается на переменную ds, выбираются варианты методов
push() и рор(), определенные при реализации данного интер­фейса в классе DynStack.
Когда же она ссылается на переменную fs, выбираются варианты методов push() и рор(),
определенные при реализации данного интерфейса в классе FixedStack. Как отмечалось
ранее, все эти решения принимаются во время выполнения. Обращение к нескольким реали-
зациям интерфейса через ссылочную переменную интерфейса является наиболее эффективным
средством в Java для поддержки полиморфизма во время выполнения.