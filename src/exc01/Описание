                                Интерфейсы
    interface - можно указать, Что именно должен выполнять класс, но не как это делать.
    Интерфейсы предназначены для поддержки динамического разрешения вы­зовов методов во
время выполнения. Как правило, для нормального выполнения вызова метода из одного класса
в другом оба класса должны присутствовать во вре­мя компиляции, чтобы компилятор Java мог
проверить совместимость сигнатур методов. Само по себе это требование создает статическую
и нерасширяемую сре­ду распределения классов. В такой системе функциональные возможности
неизбежно передаются вверх по иерархии классов, в результате чего механизмы будут становиться
доступными все большему количеству подклассов. Интерфейсы пред­назначены для предотвращения
этой проблемы. Они изолируют определение ме­тода или набора методов от иерархии наследования.
А поскольку иерархия интер­фейсов не совпадает с иерархией классов, то классы, никак не связанные
между собой иерархически, могут реализовать один и тот же интерфейс.
Особенности:

- не содержат переменные экземпляра;
- переменные неявно объявлены как final и static, они должны быть инициализированы;
- методы и переменные неявно объявляются как public;
- метод может не содержать тело(кроме методов по умолчанию);

Различия между интерфейсом и абстрактным классом:
- интерфейс его может реализовать любое количество классов;
- однин класс может реализовать любое количество интерфейсов;
- НО класс может наследоваться только от одного суперкласса(абстрактного или не абстрактного);

    Каждый класс который включает в себя интерфейс, должен реализовать все его методы.
    Если в классе реализуется больше одного интерфейса, имена интерфейсов раз­деляются запятыми.
Если в классе реализуются два интерфейса, в которых объявляется один и тот же метод, то этот же
метод будет использоваться клиен­тами любого из двух интерфейсов. Методы, реализующие элементы
интерфейса, должны быть объявлены как public. Кроме того, сигнатура типа реализующего метода должна
в точности совпадать с сигнатурой типа, указанной в определении interface.
